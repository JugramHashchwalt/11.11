# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_NzR4wGz0t_37jRarH_HTUHzysZNi8NY
"""

# Define the database for medicines and suggestions
kasalliklar_baza = {
    "gripp": {
        "dori_nomi": ["Paracetamol", "Ibuprofen"],
        "maslahatlar": [
            "Ko'p suyuqlik iching.",
            "Yengil kiyining va yaxshi dam oling.",
            "Agar isitma yuqori bo'lsa, shifokorga murojaat qiling."
        ]
    },
    "yo'tal": {
        "dori_nomi": ["Ambroxol", "Bromhexine"],
        "maslahatlar": [
            "Issiq ichimliklarni ko'p iching.",
            "Tamaki va changdan uzoqroq bo'ling.",
            "Agar yo'tal ikki haftadan ortiq davom etsa, shifokorga murojaat qiling."
        ]
    },
    "oshqozon og'rig'i": {
        "dori_nomi": ["Omeprazole", "Ranitidine"],
        "maslahatlar": [
            "Yog'li va achchiq ovqatlardan saqlaning.",
            "Ovqatlanish vaqtiga rioya qiling.",
            "Ko'p miqdorda suv iching."
        ]
    },
    "allergiya": {
        "dori_nomi": ["Cetirizine", "Loratadine"],
        "maslahatlar": [
            "Allergenlardan uzoqroq bo'ling.",
            "Ko'proq suv iching.",
            "Agar ahvol yaxshilanmasa, shifokorga murojaat qiling."
        ]
    },
    "bosh og'rig'i": {
        "dori_nomi": ["Aspirin", "Ibuprofen"],
        "maslahatlar": [
            "Dam oling va qulay muhitda bo'ling.",
            "Suyuqlik iching va yengil ovqatlaning.",
            "Shovqindan uzoqroq bo'ling."
        ]
    },
    "qorin og'rig'i": {
        "dori_nomi": ["Mebeverine", "Buscopan"],
        "maslahatlar": [
            "Og'ir ovqatlardan saqlaning.",
            "Iliq choy iching.",
            "Agar og'riq davom etsa, shifokorga murojaat qiling."
        ]
    },
    "isitma": {
        "dori_nomi": ["Paracetamol", "Ibuprofen"],
        "maslahatlar": [
            "Yengil kiyining va ko'p dam oling.",
            "Sovuq kompresslardan foydalaning.",
            "Suyuqlik ichishdan saqlanmang."
        ]
    },
    "burun bitishi": {
        "dori_nomi": ["Xylometazoline", "Saline Spray"],
        "maslahatlar": [
            "Issiq choy yoki sho'rvadan iching.",
            "Issiq va nam muhitda bo'ling.",
            "Burun yuvish uchun sho'rlangan suvdan foydalaning."
        ]
    },
    "ko'z qizarishi": {
        "dori_nomi": ["Artificial Tears", "Ketotifen"],
        "maslahatlar": [
            "Ko'zlaringizni toza tuting.",
            "Chang va tutundan saqlaning.",
            "Agar qichishish yoki og'riq kuchaysa, shifokorga murojaat qiling."
        ]
    },
    "uyqusizlik": {
        "dori_nomi": ["Melatonin", "Diphenhydramine"],
        "maslahatlar": [
            "Uyqu vaqtiga rioya qiling.",
            "Elektron qurilmalardan uzoqroq bo'ling.",
            "Iliq sut yoki damlama iching."
        ]
    }
}

# Function to suggest medicine and advice based on illness
def dori_nomi(kasallik):
    # Check if illness is provided
    if not kasallik:
        return "Iltimos, kasallik nomini kiriting."

    # Check if the illness is in the database
    if kasallik in kasalliklar_baza:
        dori_nomi = kasalliklar_baza[kasallik]["dori_nomi"]
        maslahatlar = kasalliklar_baza[kasallik]["maslahatlar"]

        # Generate response
        javob = f"Dori nomlari: {', '.join(dori_nomi)}\n"
        javob += "Maslahatlar:\n" + "\n".join(f"- {m}" for m in maslahatlar)
        return javob
    else:
        return "Kechirasiz, bu kasallik bo'yicha ma'lumot topilmadi. Biliblar bazasini yangilash kerak."

# Prompt the user to enter an illness
kasallik = input("Kasallik nomini kiriting: ")
print(dori_nomi(kasallik))

# Define the database for games
oyinlar_baza = {
    "Cyberpunk 2077": {
        "nomi": "Cyberpunk 2077",
        "kategoriya": "Action RPG",
        "narxi": "$59.99",
        "kompyuter_tavsiyalari": {
            "OS": "Windows 10",
            "Processor": "Intel Core i7-4790 or AMD Ryzen 3 3200G",
            "RAM": "12 GB",
            "Graphics": "NVIDIA GTX 1060 6GB / AMD Radeon R9 Fury",
            "Storage": "70 GB SSD"
        }
    },
    "The Witcher 3: Wild Hunt": {
        "nomi": "The Witcher 3: Wild Hunt",
        "kategoriya": "Action RPG",
        "narxi": "$39.99",
        "kompyuter_tavsiyalari": {
            "OS": "Windows 7/8/10 (64-bit)",
            "Processor": "Intel Core i5-2500K / AMD Phenom II X4 940",
            "RAM": "8 GB",
            "Graphics": "NVIDIA GeForce GTX 770 / AMD Radeon R9 290",
            "Storage": "50 GB HDD"
        }
    },
    "Minecraft": {
        "nomi": "Minecraft",
        "kategoriya": "Sandbox, Survival",
        "narxi": "$26.95",
        "kompyuter_tavsiyalari": {
            "OS": "Windows 10",
            "Processor": "Intel Core i3-3210 / AMD A8-7600 APU",
            "RAM": "4 GB",
            "Graphics": "Intel HD Graphics 4000 / AMD Radeon R5",
            "Storage": "180 MB HDD"
        }
    },
    "Valorant": {
        "nomi": "Valorant",
        "kategoriya": "First-Person Shooter",
        "narxi": "Free-to-play",
        "kompyuter_tavsiyalari": {
            "OS": "Windows 7/8/10 (64-bit)",
            "Processor": "Intel Core i3-4150",
            "RAM": "4 GB",
            "Graphics": "Intel HD Graphics 3000",
            "Storage": "10 GB SSD"
        }
    },
    "Assassin's Creed Valhalla": {
        "nomi": "Assassin's Creed Valhalla",
        "kategoriya": "Action RPG",
        "narxi": "$59.99",
        "kompyuter_tavsiyalari": {
            "OS": "Windows 10",
            "Processor": "Intel Core i7-4790 / AMD Ryzen 5 1600",
            "RAM": "8 GB",
            "Graphics": "NVIDIA GTX 1080 / AMD Radeon RX 570",
            "Storage": "50 GB SSD"
        }
    }
}

# Function to get game information
def oyin_malumotlari(nomi):
    # Check if the game is in the database
    if nomi in oyinlar_baza:
        oyin = oyinlar_baza[nomi]
        # Generate response
        javob = f"O'yin nomi: {oyin['nomi']}\n"
        javob += f"Kategoriya: {oyin['kategoriya']}\n"
        javob += f"Narxi: {oyin['narxi']}\n"
        javob += "Kompyuter tavsiyalari:\n"
        for key, value in oyin["kompyuter_tavsiyalari"].items():
            javob += f"- {key}: {value}\n"
        return javob
    else:
        return "Kechirasiz, ushbu o'yin bo'yicha ma'lumot topilmadi."

# Prompt the user to enter a game name
oyin_nomi = input("O'yin nomini kiriting: ")
print(oyin_malumotlari(oyin_nomi))